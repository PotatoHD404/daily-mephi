<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="37c9279c-a318-43c4-9b30-3589c6f79900" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/customDialog.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/customDialog.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/customSelect.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/customSelect.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/navbar.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/navbar.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/postDialog.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/postDialog.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/registerDialog.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/registerDialog.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/reviews.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/reviews.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/rippledButton.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/rippledButton.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/searchFilter.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/searchFilter.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/sliderFilter.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/sliderFilter.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/topUsers.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/topUsers.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/tutor.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/tutor.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/tutorProfile.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/tutorProfile.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/auth/mephiOauthConfig.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/auth/mephiOauthConfig.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/auth/nextAuthOptions.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/auth/nextAuthConfig.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/react/useSendQuery.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/react/useSendQuery.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/_app.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/pages/_app.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/_document.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/pages/_document.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/api/auth/[...nextauth].ts" beforeDir="false" afterPath="$PROJECT_DIR$/pages/api/auth/[...nextauth].ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/api/auth/session/renew_jwt.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/api/v1/[...trpc].ts" beforeDir="false" afterPath="$PROJECT_DIR$/pages/api/v1/[...trpc].ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/api/v1/openapi.json.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/api/v1/openapi.yaml.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/pages/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/users/[id].tsx" beforeDir="false" afterPath="$PROJECT_DIR$/pages/users/[id].tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/server/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/middlewares/isAuthorized.ts" beforeDir="false" afterPath="$PROJECT_DIR$/server/middlewares/isAuthorized.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/utils/context.ts" beforeDir="false" afterPath="$PROJECT_DIR$/server/utils/context.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/utils/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/server/utils/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/utils/trpc.ts" beforeDir="false" afterPath="$PROJECT_DIR$/server/utils/trpc.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/api/mocks/isAuthorized.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/api/mocks/isAuthorized.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/api/mocks/isToxic.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/api/mocks/isToxic.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/buyMeCoffee.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/buyMeCoffee.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/closeButton.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/closeButton.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/comment.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/comment.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/commentBtn.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/commentBtn.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/comments.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/comments.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/crown.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/crown.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/customAccordion.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/customAccordion.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/customDialog.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/customDialog.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/customSelect.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/customSelect.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/dislikeBtn.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/dislikeBtn.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/filterButtons.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/filterButtons.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/filters.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/filters.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/footer.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/footer.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/likeBtn.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/likeBtn.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/loadingBlock.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/loadingBlock.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/material.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/material.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/minicat.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/minicat.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/navbar.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/navbar.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/newPost.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/newPost.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/postDialog.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/postDialog.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/profileSettings.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/profileSettings.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/rating.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/rating.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/ratingPlace.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/ratingPlace.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/reactions.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/reactions.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/registerDialog.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/registerDialog.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/replyBtn.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/replyBtn.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/reviews.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/reviews.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/rippledButton.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/rippledButton.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/searchBar.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/searchBar.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/searchFilter.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/searchFilter.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/seo.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/seo.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/sliderFilter.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/sliderFilter.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/tabsBox.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/tabsBox.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/topUsers.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/topUsers.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/tutor.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/tutor.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/user.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/user.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/userHeader.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/userHeader.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/components/warningDialog.stories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/components/warningDialog.stories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/pages/404.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/pages/404.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/pages/500.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/pages/500.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/pages/about.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/pages/about.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/pages/home.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/pages/home.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/pages/materials/materials.index.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/pages/materials/materials.index.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/pages/search.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/pages/search.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/stories/pages/tutors/tutors.index.stories.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/tests/stories/pages/tutors/tutors.index.stories.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="false" />
    <option name="myAllFileTypesSelected" value="true" />
    <option name="mySelectedFileTypes">
      <set />
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2RILZabr7Y5IGJyStiROYNLqPuf" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/PotatoHD/Documents/GitHub/daily-mephi&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;C:/Users/PotatoHD/Documents/GitHub/daily-mephi-4/node_modules/jest&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\PotatoHD\\Documents\\GitHub\\daily-mephi\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="Jest.filesRouter">
    <configuration name="All Tests" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <jest-options value="--runInBand" />
      <envs />
      <scope-kind value="ALL" />
      <method v="2" />
    </configuration>
    <configuration name="Files Router" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/tests/api/files.test.ts" />
      <test-names>
        <test-name value="Files Router" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[PUT] /api/v1/users" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/tests/api/users.test.ts" />
      <test-names>
        <test-name value="[PUT] /api/v1/users" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[PUT] /api/v1/users.Edit user bio/nickname toxic" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <jest-options value="--runInBand" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/tests/api/users.test.ts" />
      <test-names>
        <test-name value="[PUT] /api/v1/users" />
        <test-name value="Edit user bio/nickname toxic" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="filesRouter" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/tests/api/files.test.ts" />
      <test-names>
        <test-name value="filesRouter" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="test" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Jest.All Tests" />
      <item itemvalue="Jest.[PUT] /api/v1/users" />
      <item itemvalue="Jest.filesRouter" />
      <item itemvalue="Jest.[PUT] /api/v1/users.Edit user bio/nickname toxic" />
      <item itemvalue="Jest.Files Router" />
      <item itemvalue="npm.test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.filesRouter" />
        <item itemvalue="Jest.[PUT] /api/v1/users" />
        <item itemvalue="Jest.[PUT] /api/v1/users.Edit user bio/nickname toxic" />
        <item itemvalue="npm.test" />
        <item itemvalue="Jest.Files Router" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="37c9279c-a318-43c4-9b30-3589c6f79900" name="Changes" comment="" />
      <created>1686932714770</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1686932714770</updated>
      <workItem from="1686932716150" duration="107000" />
      <workItem from="1686932840253" duration="4037000" />
      <workItem from="1687002907259" duration="13000" />
      <workItem from="1687002937182" duration="2324000" />
      <workItem from="1687089919808" duration="1130000" />
      <workItem from="1687251176787" duration="616000" />
      <workItem from="1687258811852" duration="4215000" />
      <workItem from="1687263991996" duration="1066000" />
      <workItem from="1687278448108" duration="1264000" />
      <workItem from="1687338237974" duration="910000" />
      <workItem from="1687339175763" duration="7898000" />
      <workItem from="1687424236229" duration="7565000" />
      <workItem from="1687535254396" duration="3392000" />
      <workItem from="1687539043689" duration="5564000" />
      <workItem from="1698337332618" duration="591000" />
      <workItem from="1704212909164" duration="3138000" />
      <workItem from="1704228585106" duration="1174000" />
      <workItem from="1704230243499" duration="5924000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>